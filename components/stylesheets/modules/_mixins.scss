// All mixins and functions



//////////////////////////////////////
// Using REM for font sizes         //
//////////////////////////////////////

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// USAGE:
// p {
//   @include font-size(14px)
// }

//////////////////////////////////////
// Cleaner Breakpoint Media Queries //
//////////////////////////////////////

@mixin bp-xxlarge {
  @media only screen and (max-width: 160em) {
    @content;
  }
}


@mixin bp-xlarge {
  @media only screen and (max-width: 128em) {
    @content;
  }
}


@mixin bp-large {
  @media only screen and (max-width: 80em) {
    @content;
  }
}

@mixin bp-medium {
  @media only screen and (max-width: 60em) {
    @content;
  }
}

@mixin bp-small {
  @media only screen and (max-width: 40em) {
    @content;
  }
}

@mixin bp-xsmall {
  @media only screen and (max-width: 30em) {
    @content;
  }
}

// USAGE:
// @include bp-small {
//     width: 100%;
//     float: none;
//     margin: 0;
//   }

//////////////////////////////////////
// Quickly Center an element        //
//////////////////////////////////////

@mixin push--auto {
    margin: {
        left: auto;
        right: auto;
    }
}

//////////////////////////////////////////////
// Pseudo - when using ::before or :: after //
//////////////////////////////////////////////

@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

//////////////////////////////////////////////
// Responsive Ratio - for scalable elements //
//////////////////////////////////////////////

@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

//////////////////////
// Background image //
//////////////////////

@mixin background($imgpath, $position:center center, $repeat: no-repeat) {
    background: {
        image: url($imgpath);
        position: $position;
        repeat: $repeat;
        background-attachment: fixed;
        background-size: cover;
        background-color: #464646;
    }
}

//////////////////////
// CSS Triangles    //
//////////////////////

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
    @include pseudo($pos: $position);
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}

////////////////////////////////
// Form Input Placeholders    //
////////////////////////////////

@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

///////////////////////
// Z-Index Values    //
///////////////////////

@function z($name) {
    @if index($z-indexes, $name) {
        @return (length($z-indexes) - index($z-indexes, $name)) + 1;
    } @else {
        @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
        @return null;
    }
}
$z-indexes: (
    "outdated-browser",
    "modal",
    "site-header",
    "page-wrapper",
    "site-footer"
);

////////////////////////////////
// Trigger Hardware Animation //
////////////////////////////////

@mixin hardware($backface: true, $perspective: 1000) {
    @if $backface {
        backface-visibility: hidden;
    }
    perspective: $perspective;
}

@mixin blur($amount) {
  -webkit-filter: blur($amount);
  -moz-filter: blur($amount);
  -o-filter: blur($amount);
  -ms-filter: blur($amount);
  filter: blur($amount);
}
